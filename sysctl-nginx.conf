
#每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目。
net.core.netdev_max_backlog = 32768

#web应用中listen函数的backlog默认会给我们内核参数的net.core.somaxconn限制到128
#而nginx定义的NGX_LISTEN_BACKLOG默认为511，所以有必要调整这个值。
net.core.somaxconn = 32768

#默认的数据接收缓冲
net.core.rmem_default = 8388608

#默认的数据发送缓冲
net.core.wmem_default = 8388608

#最大的数据接收缓冲
net.core.rmem_max = 16777216

#最大的数据发送缓冲
net.core.wmem_max = 16777216

#表示SYN队列的长度，默认为1024，加大队列长度为8192，可以容纳更多等待连接的网络连接数。
net.ipv4.tcp_max_syn_backlog = 65536

#时间戳可以避免序列号的卷绕。一个1Gbps的链路肯定会遇到以前用过的序列号。
#时间戳能够让内核接受这种“异常”的数据包。这里需要将其关掉。
net.ipv4.tcp_timestamps = 0

#为了打开对端的连接，内核需要发送一个SYN并附带一个回应前面一个SYN的ACK。也就是所谓三次握手中的第二次握手。
#这个设置决定了内核放弃连接之前发送SYN+ACK包的数量。
net.ipv4.tcp_synack_retries = 2

#在内核放弃建立连接之前发送SYN包的数量。
net.ipv4.tcp_syn_retries = 2

#开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接。
net.ipv4.tcp_tw_reuse = 1

#内存单位是页，而不是字节
#[0]低于此值TCP没有内存压力
#[1]在此值下进入内存压力阶段
#[2]高于此值TCP拒绝分配socket

#TCP数据缓冲
net.ipv4.tcp_mem = 94500000 91500000 92700000

#TCP数据接收缓冲
net.ipv4.tcp_rmem = 32768 436600 873200

#TCP数据发送缓冲
net.ipv4.tcp_wmem = 8192 436600 873200

#系统中最多有多少个TCP套接字不被关联到任何一个用户文件句柄上。
#如果超过这个数字，连接将即刻被复位并打印出警告信息
#这个限制仅仅是为了防止简单的DoS攻击，不能过分依靠它或者人为地减小这个值
#更应该增加这个值，如果增加了内存之后
net.ipv4.tcp_max_orphans = 3276800

#如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间。
net.ipv4.tcp_fin_timeout = 30
